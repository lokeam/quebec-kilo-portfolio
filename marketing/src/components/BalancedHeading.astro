---
import { cn } from '@/utils/cn.js';
import { buildAttributes } from '@/utils/attributes.js';

// Astro component props interface
export interface Props {
  className?: string;
  as?: string;
  size?: "sm" | "md" | "xl" | "2xl";
  [key: string]: any; // Allow additional HTML attributes
  id?: string;
}

const {
  className = "",
  as: Tag = "h2",
  size = "md",
  id = "",
  ...props
} = Astro.props;

// Size variants mapping
const sizeVariants = {
  sm: "text-2xl md:text-3xl md:leading-snug",
  md: "text-3xl md:text-5xl md:leading-tight",
  xl: "text-4xl md:text-4xl lg:text-8xl lg:leading-[1.3]",
  "2xl": "text-5xl md:text-7xl md:leading-[1.2]",
};

// Simple, predictable className building
const finalClassName = cn(
  "text-center mx-auto tracking-tight font-semibold",
  "bg-clip-text text-transparent bg-gradient-to-b from-neutral-800 via-white to-white",
  sizeVariants[size as keyof typeof sizeVariants], // Always apply size
  "scroll-mt-20", // Add scroll margin to prevent navbar overlap
  className // Always apply custom classes on top
);

// Convert props to HTML attributes string
const attributes = buildAttributes(props);
---

<Tag id={id} class={finalClassName} {attributes}>
  <span class="inline-block" data-br>
    <slot />
  </span>
</Tag>

<script>
  import { initTextBalancing } from '../utils/text-balance.js';

  // Initialize text balancing on page load
  document.addEventListener('DOMContentLoaded', initTextBalancing);
</script>